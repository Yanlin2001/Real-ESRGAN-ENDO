# general settings
name: finetune_realesrgan_m_pairdata
model_type: RealESRNetModel
scale: 1
num_gpu: auto
manual_seed: 0

# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False

high_order_degradation: False # do not use the high-order degradation generation process

# dataset and data loader settings
datasets:
  train:
    name: motion
    type: RealESRGANPairedDataset
    dataroot_gt: datasets/motion/train/gt
    dataroot_lq: datasets/motion/train/lq
    meta_info: datasets/meta_info/motion_pair.txt
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: False
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 5
    batch_size_per_gpu: 3
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: datasets/motion/test/gt
    dataroot_lq: datasets/motion/test/lq
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32
  scale: 1

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [80000]
    gamma: 0.5

  total_iter: 80000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# Uncomment these for validation
val:
  val_freq: !!float 2e4
  save_img: True

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
